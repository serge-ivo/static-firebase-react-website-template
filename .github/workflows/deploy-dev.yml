name: Deploy Firebase Hosting (Dev)

on:
  push:
    branches:
      - main # Trigger dev deployment on push/merge to main branch
  workflow_dispatch: # Allow manual trigger

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment:
      name: development

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"
          cache: npm
          cache-dependency-path: "**/package-lock.json"

      - name: Install Dependencies
        run: npm ci

      - name: Debug Environment
        run: |
          echo "Current working directory:"
          pwd
          echo "\nRepository contents:"
          ls -la
          echo "\nChecking for .env file:"
          ls -la .env* || true

      - name: Validate Secrets
        run: |
          echo "Checking if secrets are set (will only show length):"
          echo "VITE_FIREBASE_API_KEY length: ${#VITE_FIREBASE_API_KEY}"
          echo "VITE_FIREBASE_AUTH_DOMAIN length: ${#VITE_FIREBASE_AUTH_DOMAIN}"
          echo "VITE_FIREBASE_PROJECT_ID length: ${#VITE_FIREBASE_PROJECT_ID}"
          echo "VITE_FIREBASE_STORAGE_BUCKET length: ${#VITE_FIREBASE_STORAGE_BUCKET}"
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID length: ${#VITE_FIREBASE_MESSAGING_SENDER_ID}"
          echo "VITE_FIREBASE_APP_ID length: ${#VITE_FIREBASE_APP_ID}"
          echo "VITE_FIREBASE_MEASUREMENT_ID length: ${#VITE_FIREBASE_MEASUREMENT_ID}"
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}

      - name: Build Project
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
        run: |
          echo "Environment variables present:"
          env | grep VITE_ || true
          echo "\nBuilding project:"
          npm run build
          echo "\nChecking build output:"
          ls -la dist/

      - name: Archive Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-dev
          path: dist

  deploy:
    name: Deploy (Development)
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: development
      # url: <Your Dev Site URL> # Optional: Add dev site URL if known

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-dev
          path: dist

      - name: Deploy to Firebase Hosting (Development)
        id: deploy_firebase_dev
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          # Ensure you create this secret in GitHub Settings > Secrets > Actions
          # It should contain the JSON service account key for your DEV Firebase project.
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_DEV }}" # Ensure this secret is created in the 'development' environment settings
          channelId: dev # Deploy to preview channel for development
          projectId: "static-website-template-ee8ac" # Set the confirmed DEV project ID.

      # Optional: Output deployment URL
      - name: Deployment URL
        if: steps.deploy_firebase_dev.outputs.details_url
        run: echo "Deployed DEV to ${{ steps.deploy_firebase_dev.outputs.details_url }}"
