name: Deploy Development
on:
  push:
    branches: ["main"]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    env:
      VITE_PUBLIC_APIKEY: ${{ vars.DEV_VITE_PUBLIC_APIKEY }}
      VITE_PUBLIC_AUTHDOMAIN: ${{ vars.DEV_VITE_PUBLIC_AUTHDOMAIN }}
      VITE_PUBLIC_PROJECTID: ${{ vars.DEV_VITE_PUBLIC_PROJECTID }}
      VITE_PUBLIC_STORAGEBUCKET: ${{ vars.DEV_VITE_PUBLIC_STORAGEBUCKET }}
      VITE_PUBLIC_MESSAGINGSENDERID: ${{ vars.DEV_VITE_PUBLIC_MESSAGINGSENDERID }}
      VITE_PUBLIC_APPID: ${{ vars.DEV_VITE_PUBLIC_APPID }}
      VITE_PUBLIC_MEASUREMENTID: ${{ vars.DEV_VITE_PUBLIC_MEASUREMENTID }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm
          cache-dependency-path: "**/package-lock.json"

      - name: Install
        run: npm ci
        working-directory: ./

      - name: Build
        run: npm run build
        working-directory: ./

      - name: Archive Development Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Deploy to Firebase
        uses: w9jds/firebase-action@v13.28.0
        with:
          args: deploy --only hosting:jsw-dev
        env:
          GCP_SA_KEY: ${{ secrets.DEV_FIREBASE_SERVICE_ACCOUNT }}
          PROJECT_ID: jsninja-dev
