name: Deploy to Firebase Hosting (Dev/Prod)

on:
  push:
    branches:
      - main # Trigger deployment to Development on push to main branch
      - prod # Trigger deployment to Production on push to prod branch
  workflow_dispatch: # Allow manual trigger (will likely default to main's settings unless configured)

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x # Specify Node.js version
          cache: npm
          cache-dependency-path: "**/package-lock.json"

      - name: Install Dependencies
        run: npm ci

      # Consider using environment-specific .env files or build args if build needs env variables
      - name: Build Project
        run: npm run build

      - name: Archive Production Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.ref_name }} # Add branch name to artifact name for clarity
          path: dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    # Optional: Define GitHub Environments for better separation and protection rules
    # environment:
    #   name: ${{ github.ref == 'refs/heads/prod' && 'production' || 'development' }}
    #   url: ${{ steps.deploy_firebase.outputs.details_url }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.ref_name }}
          path: dist

      - name: Deploy to Firebase Hosting (Development)
        if: github.ref == 'refs/heads/main' # Condition for main branch
        id: deploy_firebase_dev
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          # Use secrets/vars prefixed with DEV_ or similar for the dev environment
          firebaseServiceAccount: "${{ secrets.DEV_FIREBASE_SERVICE_ACCOUNT }}" # e.g., Secret for dev Firebase project
          channelId: live # Deploy to the live channel of the dev project
          projectId: "${{ vars.DEV_FIREBASE_PROJECT_ID }}" # e.g., Variable for dev Firebase project ID
          # target: dev_hosting_target # Optional: if you have specific targets
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

      - name: Deploy to Firebase Hosting (Production)
        if: github.ref == 'refs/heads/prod' # Condition for prod branch
        id: deploy_firebase_prod
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          # Use secrets/vars prefixed with PROD_ or similar for the prod environment
          firebaseServiceAccount: "${{ secrets.PROD_FIREBASE_SERVICE_ACCOUNT }}" # e.g., Secret for prod Firebase project
          channelId: live # Deploy to the live channel of the prod project
          projectId: "${{ vars.PROD_FIREBASE_PROJECT_ID }}" # e.g., Variable for prod Firebase project ID
          # target: prod_hosting_target # Optional: if you have specific targets
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

      # Optional: Output deployment URL
      # - name: Deployment URL
      #   run: echo "Deployed to ${{ steps.deploy_firebase_dev.outputs.details_url || steps.deploy_firebase_prod.outputs.details_url }}" 